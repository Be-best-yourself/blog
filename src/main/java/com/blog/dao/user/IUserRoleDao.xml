<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.user.IUserRoleDao">
	<resultMap id="BaseResultMap" type="com.blog.entity.user.UserRole">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="role_id" jdbcType="INTEGER" property="roleId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, role_id, create_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user_role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_user_role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.blog.entity.user.UserRole">
		insert into t_user_role (id, user_id, role_id,
		create_time)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{roleId,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.blog.entity.user.UserRole">
		insert into t_user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.blog.entity.user.UserRole">
		update t_user_role
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.blog.entity.user.UserRole">
		update t_user_role
		set user_id = #{userId,jdbcType=INTEGER},
		role_id = #{roleId,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectAlls" parameterType="com.blog.entity.user.User"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user_role
		<where>
			<if test="id != null">
				and #{id,jdbcType=INTEGER}
			</if>
			<if test="userId != null">
				and #{userId,jdbcType=INTEGER}
			</if>
			<if test="roleId != null">
				and #{roleId,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
				and #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
</mapper>