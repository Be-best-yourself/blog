<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zfw.blog.dao.blog.IBlogTextDao">
  <resultMap id="BaseResultMap" type="com.zfw.blog.entity.blog.BlogText">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zfw.blog.entity.blog.BlogText">
    <result column="blog_text" jdbcType="LONGVARBINARY" property="blogText" />
  </resultMap>
  <sql id="Base_Column_List">
    id, blog_id
  </sql>
  <sql id="Blob_Column_List">
    blog_text
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blog_text
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_blog_text
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zfw.blog.entity.blog.BlogText">
    insert into t_blog_text (id, blog_id, blog_text
      )
    values (#{id,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{blogText,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zfw.blog.entity.blog.BlogText">
    insert into t_blog_text
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="blogText != null">
        blog_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="blogText != null">
        #{blogText,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zfw.blog.entity.blog.BlogText">
    update t_blog_text
    <set>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="blogText != null">
        blog_text = #{blogText,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zfw.blog.entity.blog.BlogText">
    update t_blog_text
    set blog_id = #{blogId,jdbcType=INTEGER},
      blog_text = #{blogText,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zfw.blog.entity.blog.BlogText">
    update t_blog_text
    set blog_id = #{blogId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>